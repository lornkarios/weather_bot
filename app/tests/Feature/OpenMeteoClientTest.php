<?php

namespace Tests\Feature;

use App\Service\WeatherApi\Dto\DayPartWeather;
use App\Service\WeatherApi\Dto\OneDayWeather;
use App\Service\WeatherApi\Dto\WeatherType;
use App\Service\WeatherApi\OpenMeteoClient;
use Illuminate\Support\Carbon;
use Tests\TestCase;

class OpenMeteoClientTest extends TestCase
{
    /**
     * @dataProvider responseOneDayDataProvider
     */
    public function test_one($responseData): void
    {
        /** @var OpenMeteoClient $client */
        $client = app(OpenMeteoClient::class);
        $collection = $client->oneDayWeatherCollection($responseData);
        view('today', ['weather' => $collection->first()])->render();
        $this->assertEquals(
            collect([
                new OneDayWeather(
                    Carbon::make('26.08.2024', 'Europe/Berlin'),
                    new DayPartWeather(WeatherType::PARTLY_CLOUDLY,14, 16, 0, 0),
                    new DayPartWeather(WeatherType::CLEAR_SKY,12, 16, 0, 1),
                    new DayPartWeather(WeatherType::OVERCAST,19, 24, 0, 1),
                    new DayPartWeather(WeatherType::PARTLY_CLOUDLY,16, 24, 0, 1),
                )
            ]),
            $collection,
        );
    }

    /**
     * @dataProvider responseThreeDaysDataProvider
     */
    public function test_three($responseData): void
    {
        /** @var OpenMeteoClient $client */
        $client = app(OpenMeteoClient::class);
        $collection = $client->oneDayWeatherCollection($responseData);
        view('3days', ['weatherCollection' => $collection])->render();
        $this->assertEquals(3, $collection->count());
    }

    public static function responseOneDayDataProvider(): array
    {
        $json = '{
    "latitude": 52.52,
    "longitude": 13.419998,
    "generationtime_ms": 0.051021575927734375,
    "utc_offset_seconds": 7200,
    "timezone": "Europe/Berlin",
    "timezone_abbreviation": "CEST",
    "elevation": 38.0,
    "hourly_units": {
        "time": "iso8601",
        "temperature_2m": "°C",
        "precipitation": "mm",
        "wind_speed_10m": "m/s",
        "weather_code": "wmo code"
    },
    "hourly": {
        "time": [
            "2024-08-26T00:00",
            "2024-08-26T01:00",
            "2024-08-26T02:00",
            "2024-08-26T03:00",
            "2024-08-26T04:00",
            "2024-08-26T05:00",
            "2024-08-26T06:00",
            "2024-08-26T07:00",
            "2024-08-26T08:00",
            "2024-08-26T09:00",
            "2024-08-26T10:00",
            "2024-08-26T11:00",
            "2024-08-26T12:00",
            "2024-08-26T13:00",
            "2024-08-26T14:00",
            "2024-08-26T15:00",
            "2024-08-26T16:00",
            "2024-08-26T17:00",
            "2024-08-26T18:00",
            "2024-08-26T19:00",
            "2024-08-26T20:00",
            "2024-08-26T21:00",
            "2024-08-26T22:00",
            "2024-08-26T23:00"
        ],
        "temperature_2m": [
            16.2,
            15.5,
            14.7,
            14.1,
            13.6,
            13.0,
            12.3,
            12.5,
            14.2,
            16.6,
            19.1,
            21.8,
            22.6,
            22.9,
            23.4,
            24.3,
            24.6,
            24.7,
            24.1,
            23.2,
            21.4,
            19.1,
            18.1,
            16.2
        ],
        "precipitation": [
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00,
            0.00
        ],
        "wind_speed_10m": [
            1.17,
            0.76,
            0.81,
            0.61,
            0.78,
            0.89,
            1.04,
            1.25,
            0.92,
            1.22,
            1.61,
            2.01,
            2.06,
            2.16,
            2.34,
            1.61,
            1.00,
            1.75,
            1.39,
            1.06,
            0.91,
            1.14,
            1.13,
            1.41
        ],
        "weather_code": [
            3,
            2,
            2,
            1,
            2,
            2,
            0,
            0,
            0,
            1,
            3,
            2,
            2,
            2,
            3,
            3,
            3,
            2,
            2,
            2,
            2,
            2,
            1,
            1
        ]
    }
}';
        return [
            ['responseData' => json_decode($json, true)],
        ];
    }

    public static function responseThreeDaysDataProvider(): array
    {
        $json = '{"latitude":52.52,"longitude":13.419998,"generationtime_ms":0.0730752944946289,"utc_offset_seconds":7200,"timezone":"Europe/Berlin","timezone_abbreviation":"CEST","elevation":38.0,"hourly_units":{"time":"iso8601","temperature_2m":"°C","precipitation":"mm","wind_speed_10m":"m/s","weather_code":"wmo code"},"hourly":{"time":["2024-08-26T00:00","2024-08-26T01:00","2024-08-26T02:00","2024-08-26T03:00","2024-08-26T04:00","2024-08-26T05:00","2024-08-26T06:00","2024-08-26T07:00","2024-08-26T08:00","2024-08-26T09:00","2024-08-26T10:00","2024-08-26T11:00","2024-08-26T12:00","2024-08-26T13:00","2024-08-26T14:00","2024-08-26T15:00","2024-08-26T16:00","2024-08-26T17:00","2024-08-26T18:00","2024-08-26T19:00","2024-08-26T20:00","2024-08-26T21:00","2024-08-26T22:00","2024-08-26T23:00","2024-08-27T00:00","2024-08-27T01:00","2024-08-27T02:00","2024-08-27T03:00","2024-08-27T04:00","2024-08-27T05:00","2024-08-27T06:00","2024-08-27T07:00","2024-08-27T08:00","2024-08-27T09:00","2024-08-27T10:00","2024-08-27T11:00","2024-08-27T12:00","2024-08-27T13:00","2024-08-27T14:00","2024-08-27T15:00","2024-08-27T16:00","2024-08-27T17:00","2024-08-27T18:00","2024-08-27T19:00","2024-08-27T20:00","2024-08-27T21:00","2024-08-27T22:00","2024-08-27T23:00","2024-08-28T00:00","2024-08-28T01:00","2024-08-28T02:00","2024-08-28T03:00","2024-08-28T04:00","2024-08-28T05:00","2024-08-28T06:00","2024-08-28T07:00","2024-08-28T08:00","2024-08-28T09:00","2024-08-28T10:00","2024-08-28T11:00","2024-08-28T12:00","2024-08-28T13:00","2024-08-28T14:00","2024-08-28T15:00","2024-08-28T16:00","2024-08-28T17:00","2024-08-28T18:00","2024-08-28T19:00","2024-08-28T20:00","2024-08-28T21:00","2024-08-28T22:00","2024-08-28T23:00"],"temperature_2m":[16.2,15.5,14.7,14.1,13.6,13.0,12.3,12.5,14.2,16.6,19.1,21.8,22.6,22.9,23.4,24.3,24.6,24.7,24.1,23.2,21.4,19.1,18.1,16.2,15.7,14.8,14.3,14.0,13.5,13.2,12.7,12.9,14.8,17.4,19.9,22.3,23.9,25.1,25.7,26.2,26.0,25.9,25.4,24.4,22.1,20.0,18.3,17.4,16.7,16.1,15.7,15.3,14.9,14.7,14.5,14.6,16.1,18.2,20.6,22.9,24.6,26.2,27.6,28.6,29.2,29.5,29.2,28.3,26.6,25.1,24.1,23.2],"precipitation":[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],"wind_speed_10m":[1.17,0.76,0.81,0.61,0.78,0.89,1.04,1.25,0.92,1.22,1.61,2.01,2.06,2.16,2.34,1.61,1.00,1.75,1.39,1.06,0.91,1.14,1.13,1.41,1.30,1.17,1.22,1.10,0.92,1.12,1.39,1.39,1.13,1.56,1.94,1.89,2.14,2.39,2.72,2.25,2.25,3.62,2.89,2.02,2.02,1.99,1.91,2.02,2.14,2.14,2.22,2.32,2.43,2.43,2.53,2.75,3.08,3.20,3.26,3.01,2.91,2.92,3.00,3.13,3.13,3.26,3.33,2.97,2.60,2.60,3.04,2.79],"weather_code":[3,2,2,1,2,2,0,0,0,1,3,2,2,2,3,3,3,2,2,2,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0]}}';
        return [
            ['responseData' => json_decode($json, true)],
        ];
    }
}
